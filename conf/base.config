/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    shmatcher - base config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

process {

    // TODO nf-core: Check the defaults for all processes
    cpus   = { check_max( 1    * task.attempt, 'cpus'   ) }
    memory = { check_max( 6.GB * task.attempt, 'memory' ) }
    time   = { check_max( 4.h  * task.attempt, 'time'   ) }

    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 1
    maxErrors     = '-1'


    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Process-specific resource requirements

    withName:seq_prep {
        // `vsearch --fastx_uniques` command does not support multithreading
        cpus = 1
    }

    withName:chimera_filtering {
        cpus = 8
    }

    withName:exclude_non_iupac {
        cpus = 1
    }

    withName:seqlen_variation {
        cpus = 8
    }

    withName:no_seqlen_variation {
        cpus = 8
    }

    withName:select_representatives {
        cpus = 1
    }

    withName:clustering_97 {
        cpus = 8
    }

    withName:clustering_95 {
        cpus = 8
    }

    withName:clustering_90 {
        cpus = 8
    }

    withName:clustering_final {
        cpus = 8
    }

    withName:agglomerative_clustering {
        cpus = 4
    }

    withName:select_core_reps {
        cpus = 8
    }

    withName:sh_matching {
        cpus = 8
    }

    withName:parse_sh {
        cpus = 1
    }

    withName:compound_clusters {
        cpus = 1
    }

    withName:clustering_compounds {
        cpus = 3
    }

    withName:analyse_usearch_output_030 {
        cpus = 1
    }

    withName:analyse_usearch_output_025 {
        cpus = 1
    }

    withName:analyse_usearch_output_020 {
        cpus = 1
    }

    withName:analyse_usearch_output_015 {
        cpus = 1
    }

    withName:analyse_usearch_output_010 {
        cpus = 1
    }

    withName:analyse_usearch_output_005 {
        cpus = 1
    }

    /*
    withName:nohit_clusters {
        cpus = 1
    }

    withName:clustering_nohits {
        cpus = 4
    }

    withName:analyse_nohits {
        cpus = 1
    }
    */

    withName:parse_matches {
        cpus = 1
    }

    withName:merge_matches {
        cpus = 1
    }

    withName:matches_to_uc {
        cpus = 1
    }

    withName:return_common_taxonomy {
        cpus = 1
    }

    withName:parse_matches_html {
        cpus = 1
    }

    withName:krona {
        cpus = 1
    }



    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Process labels

    withLabel:process_single {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
    }
    withLabel:process_low {
        cpus   = { check_max( 2     * task.attempt, 'cpus'    ) }
        memory = { check_max( 12.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h   * task.attempt, 'time'    ) }
    }
    withLabel:process_medium {
        cpus   = { check_max( 6     * task.attempt, 'cpus'    ) }
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h   * task.attempt, 'time'    ) }
    }
    withLabel:process_high {
        cpus   = { check_max( 12    * task.attempt, 'cpus'    ) }
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
    }
    withLabel:process_long {
        time   = { check_max( 20.h  * task.attempt, 'time'    ) }
    }
    withLabel:process_high_memory {
        memory = { check_max( 200.GB * task.attempt, 'memory' ) }
    }
    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }

}
